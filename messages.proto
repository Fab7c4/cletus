package Protobetty;
enum Mode3 {
  Mode0 = 0;
  Mode1 = 1;
  Mode2 = 2;
}

enum Message_Constants{
MAX_MESSAGE_SIZE = 512;
}

enum UpDown {
  Up = 0;
  Down = 1;
}

message Rc {
  required Timestamp timestamp = 1;
  required int32 rcThrottle = 2;
  required int32 rcYaw = 3;
  required int32 rcPitch = 4;
  required int32 rcRoll = 5;
  required bool rcKill = 6;
  optional UpDown rcGear = 7;
  optional Mode3  rcAux2 = 8;
  optional double rcRightTrim = 9;
  optional Mode3  rcFmode = 10;
}

message Xyz {
  required double x = 1;
  required double y = 2;
  required double z = 3;
}

message Timestamp {
  required uint64 tsec = 1;
  required uint64 tnsec = 2;
}

message GpsData
{
    required uint32 time =1;
    required Xyz data = 2;
    required double v_accuracy = 3;
    required double h_accuracy = 4;
    required uint32 n_satellites = 5;
}


message Gps{
    required Timestamp timestamp = 1;
    required GpsData position = 2;
    required GpsData velocity = 3;
}

message GpsLLH{
    required Timestamp timestamb = 1;
    required GpsData position = 2;
}

message Gyro{
    required Timestamp timestamp = 1;
    required Xyz data = 2;
}

message Accel{
    required Timestamp timestamp = 1;
    required Xyz data = 2;
}

message Mag{
    required Timestamp timestamp = 1;
    required Xyz data = 2;
}

message Airspeed{
    required Timestamp timestamp = 1;
    required double scaled = 2;
    optional uint32 raw = 3;
    optional uint32 offset = 4;
}

message Servos {
    required int32 servo1 = 1;
    required int32 servo2 = 2;
    required int32 servo3 = 3;
    required int32 servo4 = 4;
    required int32 servo5 = 5;
    required int32 servo6 = 6;
    required int32 servo7 = 7;
    required Timestamp timestamp = 8;
}




message Sensors {
enum Type {
  IMU_ONLY = 1;
  IMU_AIRSPEED = 2;
  IMU_GPS = 3;
  IMU_GPS_AIRSPEED = 4;
  }

// Identifies which field is filled in.
required Type type = 1;

// One of the following will be filled in.
  required Gyro gyro = 2;
  required Accel accel = 3;
  required Mag mag =4;
  optional Airspeed airspeed =5;
  optional Gps gps =6 ;
}

message Actuators {
  required Timestamp timestamp_actuators = 1;
  optional Timestamp timestamp_sensors = 2;
  required double flaps = 3;
  required double ail = 4;
  required double rudd = 5;
  required double elev = 6;
}

message Dcm {
  required Xyz r0 = 1;
  required Xyz r1 = 2;
  required Xyz r2 = 3;
}

message AcState {
  required Xyz r_n2b_n = 1;
  required Xyz v_bn_b = 2;
  required Dcm dcm_n2b = 3;
  required Xyz w_bn_b = 4;
}

message SimTelem {
  required AcState state = 1;
  required Actuators actuators = 2;
  repeated string messages = 3;
  required double w0 = 4;
}

message AcPose {
  required Xyz r_n2b_n = 1;
  required Dcm dcm_n2b = 3;
}

message OptTelem {
  repeated AcPose poses = 1;
  repeated string messages = 2;
}

message Printf {
enum Type {
  DEBUG = 1;
  INFO = 2;
  WARNING = 3;
  ERROR = 4;
  }

// Identifies which field is filled in.
  required Type type = 1;
// One of the following will be filled in.
  required string message = 2;
  optional Timestamp timestamp=3;
  required string tag=4 [default=""];
 }

message LogMessage {
  optional Sensors sensors = 1;
  optional Actuators actuators = 2;
  optional Rc rc = 3;
  optional GpsLLH gps_llh = 4;
}


message LogContainer {
  repeated LogMessage log_data = 1;
  }
